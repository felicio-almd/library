package org.jhipster.library.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BookCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookCategoryAllPropertiesEquals(BookCategory expected, BookCategory actual) {
        assertBookCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertBookCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookCategoryAllUpdatablePropertiesEquals(BookCategory expected, BookCategory actual) {
        assertBookCategoryUpdatableFieldsEquals(expected, actual);
        assertBookCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookCategoryAutoGeneratedPropertiesEquals(BookCategory expected, BookCategory actual) {
        assertThat(expected)
            .as("Verify BookCategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookCategoryUpdatableFieldsEquals(BookCategory expected, BookCategory actual) {
        assertThat(expected)
            .as("Verify BookCategory relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookCategoryUpdatableRelationshipsEquals(BookCategory expected, BookCategory actual) {
        // empty method
    }
}
