package org.jhipster.library.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BookLocationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookLocationAllPropertiesEquals(BookLocation expected, BookLocation actual) {
        assertBookLocationAutoGeneratedPropertiesEquals(expected, actual);
        assertBookLocationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookLocationAllUpdatablePropertiesEquals(BookLocation expected, BookLocation actual) {
        assertBookLocationUpdatableFieldsEquals(expected, actual);
        assertBookLocationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookLocationAutoGeneratedPropertiesEquals(BookLocation expected, BookLocation actual) {
        assertThat(expected)
            .as("Verify BookLocation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookLocationUpdatableFieldsEquals(BookLocation expected, BookLocation actual) {
        assertThat(expected)
            .as("Verify BookLocation relevant properties")
            .satisfies(e -> assertThat(e.getAisle()).as("check aisle").isEqualTo(actual.getAisle()))
            .satisfies(e -> assertThat(e.getShelf()).as("check shelf").isEqualTo(actual.getShelf()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookLocationUpdatableRelationshipsEquals(BookLocation expected, BookLocation actual) {
        // empty method
    }
}
